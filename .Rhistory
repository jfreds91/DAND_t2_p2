ggplot(data = wq, aes(x = alcohol)) +
geom_histogram(aes(fill = quality.ordered)) +
xlim(quantile(wq$alcohol, .001), quantile(wq$alcohol, .999))
# plot alcohol vs quality: weak relationship
ggplot(data = wq,
aes(x = alcohol, y = quality)) +
geom_point(alpha = .20, position = position_jitter())
ggplot(data = wq,
aes(x=quality.ordered, y=alcohol)) +
geom_boxplot()
ggplot(data = wq,
aes(x = residual.sugar,
y = density)) +
geom_point(alpha = .25) +
geom_smooth() +
xlim(0, quantile(wq$residual.sugar, probs = .99)) +
ylim(quantile(wq$density, probs = .01), quantile(wq$density, probs = .99))
#plot each type of acidity
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
p1 <- ggplot(data = wq,
aes(x = fixed.acidity,
y = pH,
color = quality.ordered)) +
geom_point(position = position_jitter()) +
xlim(quantile(wq$fixed.acidity, probs = .01),
quantile(wq$fixed.acidity, probs = .95)) +
scale_color_brewer(type = 'div')
p2 <- ggplot(data = wq,
aes(x = volatile.acidity,
y = pH,
color = quality.ordered)) +
geom_point(position = position_jitter()) +
xlim(quantile(wq$volatile.acidity, probs = .01),
quantile(wq$volatile.acidity, probs = .95)) +
scale_color_brewer(type = 'div')
p3 <- ggplot(data = wq,
aes(x = citric.acid,
y = pH,
color = quality.ordered)) +
geom_point(position = position_jitter()) +
xlim(quantile(wq$citric.acid, probs = .01),
quantile(wq$citric.acid, probs = .95)) +
scale_color_brewer(type = 'div')
grid_arrange_shared_legend(p1,p2,p3)
# plot cum acidity vs pH vs quality: no relationship
# make total acidity column
wq$total.acidity <- with(wq, fixed.acidity + volatile.acidity + citric.acid)
ggplot(data = wq,
aes(x = total.acidity, y=pH, color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
xlim(quantile(wq$total.acidity, probs = .01),
quantile(wq$total.acidity, probs = .95)) +
ylim(2.5,4) +
scale_color_brewer(type = 'div')
# experimenting with byvariate scatter plots colored by quality
# There is a relationship between free and total sulfur dioxide
ggplot(data = wq,
aes(x = total.sulfur.dioxide,
y=free.sulfur.dioxide,
color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
scale_color_brewer(type = 'div') +
xlim(0,quantile(wq$total.sulfur.dioxide, probs = .95)) +
ylim(0,quantile(wq$free.sulfur.dioxide, probs = .95))
ggplot(data = wq,
aes(y = density, x=residual.sugar, color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
scale_color_brewer(type = 'div') +
ylim(quantile(wq$density, probs = .05),
quantile(wq$density, probs = .95)) +
xlim(quantile(wq$residual.sugar, probs = .05),
quantile(wq$residual.sugar, probs = .95))
ggplot(data = wq,
aes(y = alcohol, x=residual.sugar, color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
scale_color_brewer(type = 'div') +
ylim(quantile(wq$alcohol, probs = .01), quantile(wq$alcohol, probs = .99)) +
xlim(quantile(wq$residual.sugar, probs = .01), quantile(wq$residual.sugar, probs = .99))
m1 <- lm(quality ~ alcohol, data = wq)
m2 <- update(m1, ~ . + density)
m3 <- update(m2, ~ . + residual.sugar)
m4 <- update(m3, ~ . + free.sulfur.dioxide)
m5 <- update(m4, ~ . + total.sulfur.dioxide)
m6 <- update(m5, ~ . + pH)
mtable(m1, m2, m3, m4, m5, m6)
give.n <- function(x){
return(c(y = mean(x), label =length(x)))
}
ggplot(data = wq,
aes(x=quality.ordered, y=alcohol)) +
geom_boxplot() +
ylab('Alcohol [%]') +
xlab('Quality Rating') +
ggtitle('Alcohol Content by Quality Rating (count shown)') +
stat_summary(fun.data = give.n,
geom = "text",
position = position_dodge(width = 1),
size = 3)
ggplot(data = wq,
aes(y = density, x=residual.sugar, color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
scale_color_brewer(type = 'div', name = 'Quality') +
ylim(quantile(wq$density, probs = .05),
quantile(wq$density, probs = .95)) +
xlim(quantile(wq$residual.sugar, probs = .05),
quantile(wq$residual.sugar, probs = .95)) +
xlab('Residual Sugar [g/L]') +
ylab('Density [kg/L]') +
ggtitle('Residual Sugar vs Density vs Quality')
ggplot(data = wq,
aes(x = total.sulfur.dioxide,
y=free.sulfur.dioxide,
color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
scale_color_brewer(type = 'div', name = 'Quality') +
xlim(0,quantile(wq$total.sulfur.dioxide, probs = .95)) +
ylim(0,quantile(wq$free.sulfur.dioxide, probs = .95)) +
xlab('Total Sulfur Dioxide [mg/L]') +
ylab('Free Sulfur Dioxide [mg/L]') +
ggtitle('Sulfur Dioxide Free, Total, vs Quality')
wq = read.csv('wineQualityWhites.csv')
# I will use the following packages in my EDA
# install.packages("ggplot2")
# install.packages("GGally")
# install.packages('tidyverse')
# install.packages('dplyr')
# install.packages('RColorBrewer')
# install.packages('gridExtra')
# install.packages('grid')
# install.packages('memisc')
library(ggplot2)
library(GGally)
library(RColorBrewer)
library(gridExtra)
library(grid)
library(memisc)
library(dplyr)
# First, get some structural information on the dataset
str(wq)
ggplot(data = wq, aes(x = residual.sugar)) +
geom_histogram()
ggplot(data = wq, aes(x = residual.sugar)) +
geom_histogram() +
xlim(0, quantile(wq$residual.sugar, probs = .99))
ggplot(data = wq, aes(x = residual.sugar)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$residual.sugar, probs = .99))
p3 <- ggplot(data = wq, aes(x = fixed.acidity)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$fixed.acidity, probs = .99))
p1 <- ggplot(data = wq, aes(x = citric.acid)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$citric.acid, probs = .99))
p2 <- ggplot(data = wq, aes(x = volatile.acidity)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$volatile.acidity, probs = .99))
p3 <- ggplot(data = wq, aes(x = fixed.acidity)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$fixed.acidity, probs = .99))
grid_arrange_shared_legend(p1,p2,p3)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
p1 <- ggplot(data = wq, aes(x = citric.acid)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$citric.acid, probs = .99))
p2 <- ggplot(data = wq, aes(x = volatile.acidity)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$volatile.acidity, probs = .99))
p3 <- ggplot(data = wq, aes(x = fixed.acidity)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$fixed.acidity, probs = .99))
grid_arrange_shared_legend(p1,p2,p3)
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
p1 <- ggplot(data = wq, aes(x = citric.acid)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$citric.acid, probs = .99))
p2 <- ggplot(data = wq, aes(x = volatile.acidity)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$volatile.acidity, probs = .99))
p3 <- ggplot(data = wq, aes(x = fixed.acidity)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$fixed.acidity, probs = .99))
grid_arrange_shared_legend(p1,p2,p3)
grid_arrange(p1,p2,p3)
?grid
?grid
?arrange
grid.arrange(p1,p2,p3)
p3 <- ggplot(data = wq, aes(x = fixed.acidity)) +
geom_histogram(bins = 100) +
xlim(quantile(wq$fixed.acidity, probs = .01), quantile(wq$fixed.acidity, probs = .99))
p1 <- ggplot(data = wq, aes(x = citric.acid)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$citric.acid, probs = .99))
p2 <- ggplot(data = wq, aes(x = volatile.acidity)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$volatile.acidity, probs = .99))
p3 <- ggplot(data = wq, aes(x = fixed.acidity)) +
geom_histogram(bins = 100) +
xlim(quantile(wq$fixed.acidity, probs = .01), quantile(wq$fixed.acidity, probs = .99))
grid.arrange(p1,p2,p3)
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE,
fig.width=9, fig.height=5, fig.path='Figs/',
fig.align='center', tidy=TRUE)
p1 <- ggplot(data = wq, aes(x = pH)) +
geom_histogram(bins = 100)
p1 <- ggplot(data = wq, aes(x = pH)) +
geom_histogram(bins = 100)
# Plot histogram of qualities
ggplot(data = wq, aes(x = quality)) +
geom_histogram(binwidth = 1)
ggplot(data = wq, aes(x = pH)) +
geom_histogram()
p1 <- ggplot(data = wq, aes(x = free.sulfur.dioxide)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$free.sulfur.dioxide, probs = .99))
p2 <- ggplot(data = wq, aes(x = total.sulfur.dioxide)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$total.sulfur.dioxide, probs = .99))
grid.arrange(p1,p2)
p1 <- ggplot(data = wq, aes(x = free.sulfur.dioxide)) +
geom_histogram(bins = 50) +
xlim(0, quantile(wq$free.sulfur.dioxide, probs = .99))
p2 <- ggplot(data = wq, aes(x = total.sulfur.dioxide)) +
geom_histogram(bins = 50) +
xlim(0, quantile(wq$total.sulfur.dioxide, probs = .99))
grid.arrange(p1,p2)
p1 <- ggplot(data = wq, aes(x = free.sulfur.dioxide)) +
geom_histogram(bins = 200) +
xlim(0, quantile(wq$free.sulfur.dioxide, probs = .99))
p1 <- ggplot(data = wq, aes(x = free.sulfur.dioxide)) +
geom_histogram(bins = 200) +
xlim(0, quantile(wq$free.sulfur.dioxide, probs = .99))
p2 <- ggplot(data = wq, aes(x = total.sulfur.dioxide)) +
geom_histogram(bins = 50) +
xlim(0, quantile(wq$total.sulfur.dioxide, probs = .99))
grid.arrange(p1,p2)
p1 <- ggplot(data = wq, aes(x = free.sulfur.dioxide)) +
geom_histogram(bins = 20) +
xlim(0, quantile(wq$free.sulfur.dioxide, probs = .99))
p2 <- ggplot(data = wq, aes(x = total.sulfur.dioxide)) +
geom_histogram(bins = 50) +
xlim(0, quantile(wq$total.sulfur.dioxide, probs = .99))
grid.arrange(p1,p2)
p1 <- ggplot(data = wq, aes(x = free.sulfur.dioxide)) +
geom_histogram(bins = 50) +
xlim(0, quantile(wq$free.sulfur.dioxide, probs = .99))
p2 <- ggplot(data = wq, aes(x = total.sulfur.dioxide)) +
geom_histogram(bins = 50) +
xlim(0, quantile(wq$total.sulfur.dioxide, probs = .99))
grid.arrange(p1,p2)
# scatter matrix, less x
ggpairs(data = dplyr::select(wq[sample(nrow(wq), 1000), ], -X, -quality.ordered),
progress=FALSE) +
theme(text = element_text(size=7))
knitr::opts_chunk$set(echo = FALSE, warning=FALSE, message=FALSE,
fig.width=9, fig.height=5, fig.path='Figs/',
fig.align='center', tidy=TRUE)
# Load data
# setwd('C:/Users/1125193/Documents/PyData/DAND_t2_p2')
setwd('C:/Users/Jesse/Documents/PyData/DAND_t2_p2')
wq = read.csv('wineQualityWhites.csv')
# I will use the following packages in my EDA
# install.packages("ggplot2")
# install.packages("GGally")
# install.packages('tidyverse')
# install.packages('dplyr')
# install.packages('RColorBrewer')
# install.packages('gridExtra')
# install.packages('grid')
# install.packages('memisc')
library(ggplot2)
library(GGally)
library(RColorBrewer)
library(gridExtra)
library(grid)
library(memisc)
library(dplyr)
# First, get some structural information on the dataset
str(wq)
# Plot histogram of qualities
ggplot(data = wq, aes(x = quality)) +
geom_histogram(binwidth = 1)
summary(wq$quality)
# Histogram of alcohol content in wines
ggplot(data = wq, aes(x = alcohol)) +
geom_histogram(binwidth = .2)
# Histogram of wine density
wq$quality.ordered <- ordered(wq$quality)
ggplot(data = wq, aes(x = density)) +
geom_histogram(bins=70) +
xlim(quantile(wq$density, .001), quantile(wq$density, .999))
ggplot(data = wq, aes(x = residual.sugar)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$residual.sugar, probs = .99))
p1 <- ggplot(data = wq, aes(x = citric.acid)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$citric.acid, probs = .99))
p2 <- ggplot(data = wq, aes(x = volatile.acidity)) +
geom_histogram(bins = 100) +
xlim(0, quantile(wq$volatile.acidity, probs = .99))
p3 <- ggplot(data = wq, aes(x = fixed.acidity)) +
geom_histogram(bins = 100) +
xlim(quantile(wq$fixed.acidity, probs = .01),
quantile(wq$fixed.acidity, probs = .99))
grid.arrange(p1,p2,p3)
ggplot(data = wq, aes(x = pH)) +
geom_histogram()
p1 <- ggplot(data = wq, aes(x = free.sulfur.dioxide)) +
geom_histogram(bins = 50) +
xlim(0, quantile(wq$free.sulfur.dioxide, probs = .99))
p2 <- ggplot(data = wq, aes(x = total.sulfur.dioxide)) +
geom_histogram(bins = 50) +
xlim(0, quantile(wq$total.sulfur.dioxide, probs = .99))
grid.arrange(p1,p2)
# scatter matrix, less x
ggpairs(data = dplyr::select(wq[sample(nrow(wq), 1000), ], -X, -quality.ordered),
progress=FALSE) +
theme(text = element_text(size=7))
# scatter matrix, less x
ggpairs(data = dplyr::select(wq[sample(nrow(wq), 1000), ], -X, -quality.ordered),
progress=FALSE) +
theme(text = element_text(size=7)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 7))
ggplot(data = wq,
aes(x = total.acidity, y=pH, color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
xlim(quantile(wq$total.acidity, probs = .01),
quantile(wq$total.acidity, probs = .95)) +
ylim(2.5,4) +
scale_color_brewer(type = 'div') +
theme_dark()
# plot cum acidity vs pH vs quality: no relationship
# make total acidity column
wq$total.acidity <- with(wq, fixed.acidity + volatile.acidity + citric.acid)
ggplot(data = wq,
aes(x = total.acidity, y=pH, color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
xlim(quantile(wq$total.acidity, probs = .01),
quantile(wq$total.acidity, probs = .95)) +
ylim(2.5,4) +
scale_color_brewer(type = 'div') +
theme_dark()
#plot each type of acidity
grid_arrange_shared_legend <- function(...) {
plots <- list(...)
g <- ggplotGrob(plots[[1]] + theme(legend.position="bottom"))$grobs
legend <- g[[which(sapply(g, function(x) x$name) == "guide-box")]]
lheight <- sum(legend$height)
grid.arrange(
do.call(arrangeGrob, lapply(plots, function(x)
x + theme(legend.position="none"))),
legend,
ncol = 1,
heights = unit.c(unit(1, "npc") - lheight, lheight))
}
p1 <- ggplot(data = wq,
aes(x = fixed.acidity,
y = pH,
color = quality.ordered)) +
geom_point(position = position_jitter()) +
xlim(quantile(wq$fixed.acidity, probs = .01),
quantile(wq$fixed.acidity, probs = .95)) +
scale_color_brewer(type = 'div')+
theme_dark()
p2 <- ggplot(data = wq,
aes(x = volatile.acidity,
y = pH,
color = quality.ordered)) +
geom_point(position = position_jitter()) +
xlim(quantile(wq$volatile.acidity, probs = .01),
quantile(wq$volatile.acidity, probs = .95)) +
scale_color_brewer(type = 'div')+
theme_dark()
p3 <- ggplot(data = wq,
aes(x = citric.acid,
y = pH,
color = quality.ordered)) +
geom_point(position = position_jitter()) +
xlim(quantile(wq$citric.acid, probs = .01),
quantile(wq$citric.acid, probs = .95)) +
scale_color_brewer(type = 'div')+
theme_dark()
grid_arrange_shared_legend(p1,p2,p3)
# experimenting with byvariate scatter plots colored by quality
# There is a relationship between free and total sulfur dioxide
ggplot(data = wq,
aes(x = total.sulfur.dioxide,
y=free.sulfur.dioxide,
color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
scale_color_brewer(type = 'div') +
xlim(0,quantile(wq$total.sulfur.dioxide, probs = .95)) +
ylim(0,quantile(wq$free.sulfur.dioxide, probs = .95))+
theme_dark()
ggplot(data = wq,
aes(y = density, x=residual.sugar, color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
scale_color_brewer(type = 'div') +
ylim(quantile(wq$density, probs = .05),
quantile(wq$density, probs = .95)) +
xlim(quantile(wq$residual.sugar, probs = .05),
quantile(wq$residual.sugar, probs = .95))+
theme_dark()
ggplot(data = wq,
aes(y = alcohol, x=residual.sugar, color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
scale_color_brewer(type = 'div') +
ylim(quantile(wq$alcohol, probs = .01), quantile(wq$alcohol, probs = .99)) +
xlim(quantile(wq$residual.sugar, probs = .01), quantile(wq$residual.sugar, probs = .99))+
theme_dark()
ggplot(data = wq,
aes(y = density, x=residual.sugar, color = quality.ordered)) +
geom_point(alpha = 1, position = position_jitter()) +
scale_color_brewer(type = 'div', name = 'Quality') +
ylim(quantile(wq$density, probs = .05),
quantile(wq$density, probs = .95)) +
xlim(quantile(wq$residual.sugar, probs = .05),
quantile(wq$residual.sugar, probs = .95)) +
xlab('Residual Sugar [g/L]') +
ylab('Density [kg/L]') +
ggtitle('Residual Sugar vs Density vs Quality')+
theme_dark()
give.n <- function(x){
return(c(y = median(x) +0.1, label =length(x)))
}
ggplot(data = wq,
aes(x=quality.ordered, y=alcohol)) +
geom_boxplot() +
ylab('Alcohol [%]') +
xlab('Quality Rating') +
ggtitle('Alcohol Content by Quality Rating (count shown)') +
stat_summary(fun.data = give.n,
geom = "text",
position = position_dodge(width = 1),
size = 3)
give.n <- function(x){
return(c(y = median(x) +0.15, label =length(x)))
}
ggplot(data = wq,
aes(x=quality.ordered, y=alcohol)) +
geom_boxplot() +
ylab('Alcohol [%]') +
xlab('Quality Rating') +
ggtitle('Alcohol Content by Quality Rating (count shown)') +
stat_summary(fun.data = give.n,
geom = "text",
position = position_dodge(width = 1),
size = 3)
give.n <- function(x){
return(c(y = median(x) +0.125, label =length(x)))
}
ggplot(data = wq,
aes(x=quality.ordered, y=alcohol)) +
geom_boxplot() +
ylab('Alcohol [%]') +
xlab('Quality Rating') +
ggtitle('Alcohol Content by Quality Rating (count shown)') +
stat_summary(fun.data = give.n,
geom = "text",
position = position_dodge(width = 1),
size = 3)
ggsave('wineQuality_scatter.png')
# scatter matrix, less x
ggpairs(data = dplyr::select(wq[sample(nrow(wq), 1000), ], -X, -quality.ordered),
progress=FALSE) +
theme(text = element_text(size=7)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 7))
ggsave('wineQuality_scatter.png')
# scatter matrix, less x
ggpairs(data = dplyr::select(wq[sample(nrow(wq), 1000), ], -X, -quality.ordered),
progress=FALSE) +
theme(text = element_text(size=7)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 7))
ggsave('wineQuality_scatter.png')
# scatter matrix, less x
ggpairs(data = dplyr::select(wq[sample(nrow(wq), 1000), ], -X, -quality.ordered),
progress=FALSE) +
theme(text = element_text(size=7)) +
theme(axis.text.x = element_text(angle = 45, vjust = 1, hjust = 1, size = 7))
# ggsave('wineQuality_scatter.png')
